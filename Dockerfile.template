# base-image for python on any machine using a template variable,
# see more about dockerfile templates here:http://docs.resin.io/pages/deployment/docker-templates
FROM resin/%%RESIN_MACHINE_NAME%%-python:3

# use apt-get if you need to install dependencies,
# for instance if you need ALSA sound utils, just uncomment the lines below.
# RUN apt-get update && apt-get install -yq \
#    alsa-utils libasound2-dev && \
#    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -yq \
   libsm6 libxext6 && \
   apt-get clean && rm -rf /var/lib/apt/lists/*

# Set our working directory
WORKDIR /usr/src/app

# Copy requirements.txt first for better cache on later pushes
COPY ./requirements.txt /requirements.txt

# pip install python deps from requirements.txt on the resin.io build server
RUN pip install -r /requirements.txt

# This will copy all files in our root to the working  directory in the container
# (except files ignored by .dockerignore)
COPY . ./

# build libboson_sdk
RUN apt-get update && apt-get install -yq \
    libusb-1.0-0-dev python-opencv && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN cd libboson_sdk && make && cp libboson_sdk.so .. && \
    cd .. && rm -rf libboson_sdk

# build libboson_stream and copy library up
RUN apt-get update && apt-get install -yq \
    libusb-1.0-0-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
RUN cd libboson_stream && make && cp libboson_stream.so .. && \
    cd .. && rm -rf libboson_stream

# build pyboson on target
RUN cd pyboson && python3 ./setup.py build && \
    cp -R build/lib/pyboson ../src/pyboson 
RUN mv libboson_sdk.so libboson_stream.so src/pyboson && \
    rm -rf pyboson 

# clean up
RUN rm README.md requirements.txt

# switch on systemd init system in container
ENV INITSYSTEM on

# main.py will run when container starts up on the device
CMD ["python3","-u","src/main.py"]
